# Generated by Django 3.1.1 on 2020-12-22 10:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forename', models.CharField(max_length=30, verbose_name='forename')),
                ('surname', models.CharField(max_length=30, verbose_name='surname')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='name')),
                ('code', models.CharField(blank=True, max_length=10, null=True, verbose_name='code')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('ISBN', models.CharField(max_length=13, primary_key=True, serialize=False, verbose_name='ISBN')),
                ('title', models.CharField(max_length=100, verbose_name='title')),
                ('publisher', models.CharField(blank=True, max_length=50, null=True, verbose_name='publisher')),
                ('publishDate', models.IntegerField(blank=True, null=True, verbose_name='publishDate')),
                ('description', models.CharField(blank=True, max_length=3000, null=True, verbose_name='description')),
                ('location', models.CharField(blank=True, max_length=10, null=True, verbose_name='code')),
                ('inLibrary', models.BooleanField(default=True)),
                ('bookAuthor', models.ManyToManyField(to='libraryaccess.Author')),
                ('bookGenre', models.ManyToManyField(to='libraryaccess.Genre')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=60, unique=True, verbose_name='email')),
                ('username', models.CharField(max_length=30, unique=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='last login')),
                ('is_admin', models.BooleanField(default=False)),
                ('book_share', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('forename', models.CharField(blank=True, max_length=30, null=True, verbose_name='forename')),
                ('surname', models.CharField(blank=True, max_length=30, null=True, verbose_name='surname')),
                ('cardUID', models.CharField(blank=True, max_length=8, null=True, verbose_name='cardUID')),
                ('formCode', models.CharField(blank=True, max_length=3, null=True, verbose_name='formCode')),
                ('yearGroup', models.IntegerField(blank=True, null=True, verbose_name='yearGroup')),
                ('studentID', models.IntegerField(blank=True, null=True, verbose_name='studentID')),
                ('studentBook', models.ManyToManyField(to='libraryaccess.Book')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StudentRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signinTime', models.DateTimeField(verbose_name='signinTime')),
                ('signoutTime', models.DateTimeField(blank=True, null=True, verbose_name='signoutTime')),
                ('ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ID', 'signinTime')},
            },
        ),
    ]
